---
- name: Copy Prosody config template.
  template:
    src: prosody_config.j2
    dest: "/etc/prosody/conf.avail/{{ jitsi_meet_server_name }}.cfg.lua"
    owner: root
    group: root
    mode: "0644"
    validate: "luac -p %s"
  notify: restart prosody

- name: Symlink Prosody config by domain name.
  file:
    path: "/etc/prosody/conf.d/{{ jitsi_meet_server_name }}.cfg.lua"
    state: link
    src: "/etc/prosody/conf.avail/{{ jitsi_meet_server_name }}.cfg.lua"
  notify: restart prosody

- name: Register jicofo agent with Prosody service.
  command: >
    prosodyctl register focus auth.{{ jitsi_meet_server_name }} {{ jitsi_meet_jicofo_password }}
  args:
    creates: /var/lib/prosody/{{ 'auth%2e'+jitsi_meet_server_name | replace('.', '%2e') }}/accounts/focus.dat
  notify:
    - restart jicofo
    - restart prosody

- name: Generate SSL keypair for Prosody service.
  shell: >
    yes '' | prosodyctl cert generate {{ jitsi_meet_server_name }}
  args:
    creates: /var/lib/prosody/{{ jitsi_meet_server_name }}.crt
  notify:
    - restart jicofo
    - restart prosody

- name: Define permissions of Prosody TLS certificates and keys.
  set_fact:
    prosody_tls_basename: [ "{{ jitsi_meet_server_name }}" ]
    prosody_tls_files:
      - { extension: 'crt', mode: '0644' }
      - { extension: 'key', mode: '0600' }

- name: Symlink Prosody TLS certificates and keys.
  file:
    path: "/etc/prosody/certs/{{ item[0] }}.{{ item[1].extension }}"
    src: "/var/lib/prosody/{{ item[0] }}.{{ item[1].extension }}"
    state: link
    owner: prosody
    group: prosody
  notify: restart prosody
  with_nested:
    - "{{ prosody_tls_basename }}"
    - "{{ prosody_tls_files }}"

- name: Ensure correct permissions of Prosody TLS certificates and keys.
  file:
    path: "/var/lib/prosody/{{ item[0] }}.{{ item[1].extension }}"
    owner: prosody
    group: prosody
    mode: "{{ item[1].mode }}"
    state: file
  notify: restart prosody
  with_nested:
    - "{{ prosody_tls_basename }}"
    - "{{ prosody_tls_files }}"